---
description: 
globs: 
alwaysApply: true
---
# 1. Wasp Overview and Core Concepts

This document covers the fundamental concepts of the Wasp framework, the basic project structure, and deployment information.

## Background Information

### What is Wasp

- Wasp (Web Application SPecification language) is a declarative, statically typed, domain-specific language (DSL) for building modern, full-stack web applications.
- Unlike traditional frameworks that are sets of libraries, Wasp is a simple programming language that understands web app concepts and generates code for you.
- Wasp integrates with React (frontend), Node.js (backend), and Prisma (database ORM) to create full-stack web applications with minimal boilerplate.
- The Wasp compiler reads your declarative configuration in [main.wasp](mdc:main.wasp) and generates all the necessary code for a working web application.
- For the most up-to-date and comprehensive information, always refer to the [Wasp Docs](mdc:https:/wasp.sh/docs) -- https://wasp.sh/docs 

### Wasp Project Structure

- A Wasp project consists of a [main.wasp](mdc:main.wasp) (or `main.wasp.ts`) file in the root directory that defines the app's configuration.
- The [schema.prisma](mdc:schema.prisma) file in the root directory defines your database models.
- Your custom code lives in the `src/` directory (e.g. `src/features/`), which contains client-side and server-side code.
- Wasp generates additional code that connects everything together when you run your app.

### The main.wasp File

- The [main.wasp](mdc:main.wasp) file is the central configuration file that defines your application structure.
- It contains declarations for app settings, pages, routes, authentication, database entities, and operations (queries and actions).
- Example structure:
  ```wasp
  app myApp {
    wasp: {
      version: "^0.16.0" // Check @main.wasp for the actual version
    },
    title: "My App",
  }

  route HomeRoute { path: "/", to: HomePage }
  page HomePage {
    component: import { HomePage } from "@src/client/pages/HomePage.tsx" // Example import path
  }

  // Operations are defined here, see 3-database-operations.mdc
  query getTasks {
    fn: import { getTasks } from "@src/server/queries.js",
    entities: [Task]
  }
  ```

### Deployment

- Wasp applications can be deployed to various hosting providers.
- Wasp has a built-in one-command deployment to fly.io, e.g. `wasp deploy fly`. See the @Wasp CLI Deployment docs for more information. 
